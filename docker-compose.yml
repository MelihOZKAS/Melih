version: "3.8"
services:
  postgres_Nasip:
    container_name: main_Nasipp
    hostname: main_Nasipp
    image: postgres:latest
    env_file:
      - Site/docker.env
    networks:
      - main_Nasip
    # restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - "postgresql-data:/var/lib/postgresql/data"
    command: -p 5432

  app:
    container_name: main_Nasipp
    hostname: main_Nasipp
    build:
      context: .
      args:
        REPO_PATH: ./
      dockerfile: Dockerfile
    env_file:
      - Site/docker.env
    environment:
      - SERVICE_NAME=main_Nasipp
      - "DATABASE=postgres"
    volumes:
      - static-data:/srv/public
      - .:/srv/main_Nasipp
    expose:
      - 8000
    # restart: unless-stopped
    depends_on:
      - postgres_Nasip
      - redis_Nasip
    command: gunicorn fadilabi.wsgi:application --bind 0.0.0.0:8000
    working_dir: /srv/main_Nasipp
    networks:
      - main_Nasip
      - bridge_network

  celery_resume:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A resume worker -B -l info
    env_file:
      - Site/docker.env
    volumes:
      - celery-data:/srv/public
    depends_on:
      - app
      - redis_Nasip
    networks:
      - main_Nasip

  redis_Nasip:
    container_name: redis_Nasip
    hostname: redis_Nasip
    restart: unless-stopped
    image: redis:7-alpine
    networks:
      - main_Nasip

networks:
  main_Nasip:
  bridge_network:
    name: nginx_network
    driver: bridge

volumes:
  postgresql-data:
  static-data:
  celery-data: